{"version":3,"sources":["components/DisplayComponent.js","custom_scripts/variables.js","custom_scripts/keypadHandlers.js","components/KeypadComponent.js","custom_scripts/controlsHandlers.js","components/ControlsComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Display","Row","Col","id","appVariables","bankNum","powerOn","volume","playingSwitcher","setPower","this","setVolume","document","getElementById","value","innerHTML","setBankNum","stopAudio","newVolume","objToStr","toString","varName","call","includes","bind","audioMap","map","Map","Channel","audio_url","audio_volume","resource","Audio","Switcher","num","channels","index","i","push","prototype","play","forEach","channel","stop","pause","currentTime","audioLinksOne","name","link","audioLinksTwo","key","audioObjects","audioObj","set","findAudioToPlay","displayContent","querySelectorAll","keypad","style","backgroundColor","audioObject","get","audioDuration","duration","setTimeout","shift","tapAndPlay","event","toUpperCase","clickAndPlay","target","keypadReset","switcher","Keypad","addEventListener","keydownHandler","pointerupHandler","pointerdownHandler","removeEventListener","className","Component","updateDisplayWhenVolumeChanges","Controls","props","updatePowerSwitch","powerOnChangeHandler","updateVolume","updateDisplay","state","checked","Form","Switch","onChange","Label","htmlFor","Range","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"gPAiBeA,EAdC,WACd,OACE,mCACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAG,UAAR,SACE,6BACE,sBAAMA,GAAG,kBAAT,2B,wCCPNC,EAAe,CACnBC,QAAS,EACTC,SAAS,EACTC,OAAQ,KACRC,gBAAiB,GACjBC,SALmB,WAMjBC,KAAKJ,SAAWI,KAAKJ,QAChBI,KAAKJ,QAIRI,KAAKC,UAAUC,SAASC,eAAe,gBAAgBC,QAHvDF,SAASC,eAAe,mBAAmBE,UAA3C,QACAL,KAAKC,UAAU,KAKnBK,WAdmB,WAejBN,KAAKL,QAA2B,IAAjBK,KAAKL,QAAgB,EAAI,EACxCO,SAASC,eAAe,mBAAmBE,UACxB,IAAjBL,KAAKL,QAAgB,aAAe,YACtCY,KAEFN,UApBmB,SAoBTO,GACRR,KAAKH,OAAsB,EAAZW,EAAmB,MAIhCC,EAAW,GAAGC,SAEpB,IAAK,IAAIC,KAAWjB,EACde,EAASG,KAAKlB,EAAaiB,IAAUE,SAAS,cAChDnB,EAAaiB,GAAWjB,EAAaiB,GAASG,KAAKpB,IAGxCA,QChCTqB,EAAY,WAChB,IAAMC,EAAM,IAAIC,IAEhB,SAASC,EAAQC,EAAWC,GAC1BpB,KAAKmB,UAAYA,EACjBnB,KAAKqB,SAAW,IAAIC,MAAMH,GAC1BnB,KAAKqB,SAASxB,OAASuB,EAOzB,SAASG,EAASJ,EAAWC,EAAcI,GACzCxB,KAAKyB,SAAW,GAChBzB,KAAKwB,IAAMA,EACXxB,KAAK0B,MAAQ,EAEb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,IAAOG,EACzB3B,KAAKyB,SAASG,KAAK,IAAIV,EAAQC,EAAWC,IAV9CF,EAAQW,UAAUC,KAAO,WACvB9B,KAAKqB,SAASS,QAYhBP,EAASM,UAAUC,KAAO,SAAUjC,GAClCG,KAAKyB,SAASM,SAAQ,SAACC,GAAD,OAAcA,EAAQX,SAASxB,OAASA,KAC9DG,KAAKyB,SAASzB,KAAK0B,SAASI,OAC5B9B,KAAK0B,MAAQ1B,KAAK0B,MAAQ1B,KAAKwB,IAAMxB,KAAK0B,MAAQ,GAGpDH,EAASM,UAAUI,KAAO,WACxBjC,KAAKyB,SAASM,SAAQ,SAACC,GACrBA,EAAQX,SAASa,QACjBF,EAAQX,SAASc,YAAc,MAInC,IAAMC,EAAgB,CACpB,CACEC,KAAM,WACNC,KAAM,4DAER,CACED,KAAM,WACNC,KAAM,4DAER,CACED,KAAM,WACNC,KAAM,4DAER,CACED,KAAM,WACNC,KAAM,8DAER,CACED,KAAM,OACNC,KAAM,4DAER,CACED,KAAM,UACNC,KAAM,0DAER,CACED,KAAM,cACNC,KAAM,8DAER,CACED,KAAM,OACNC,KAAM,8DAER,CACED,KAAM,YACNC,KAAM,2DAGJC,EAAgB,CACpB,CACEF,KAAM,UACNC,KAAM,2DAER,CACED,KAAM,UACNC,KAAM,2DAER,CACED,KAAM,UACNC,KAAM,2DAER,CACED,KAAM,SACNC,KAAM,mEAER,CACED,KAAM,UACNC,KAAM,2DAER,CACED,KAAM,YACNC,KAAM,0DAER,CACED,KAAM,cACNC,KAAM,iEAER,CACED,KAAM,aACNC,KAAM,gEAER,CACED,KAAM,QACNC,KAAM,4DAkBV,MAfa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEjDP,SAAQ,SAACS,EAAK/C,GACjB,IAAMgD,EAAe,CAACL,EAAc3C,GAAK8C,EAAc9C,IACvDgD,EAAaV,SACX,SAACW,GAAD,OACGA,EAAQ,SAAe,IAAInB,EAC1BmB,EAAQ,KACRhD,EAAaG,OACb,MAGNmB,EAAI2B,IAAIH,EAAKC,MAGRzB,EA9HS,GAiIlB,SAAS4B,EAAgBJ,GACvB,IAD4B,EACtBK,EAAiB3C,SAASC,eAAe,mBADnB,cAGTD,SAAS4C,iBAAiB,cAHjB,IAG5B,2BAA2D,CAAC,IAAnDC,EAAkD,QACzD,GAAIA,EAAO1C,YAAcmC,EAAK,CAC5BO,EAAOC,MAAMC,gBAAkB,UAE/B,IAAMC,EAAcnC,EAASoC,IAAIX,GAAK9C,EAAaC,SAC7CyD,EACJF,EAAW,SAAazB,SAAS,GAAGJ,SAASgC,SAE/CR,EAAexC,UAAY6C,EAAW,KACtCxD,EAAaI,gBAAgB8B,KAAKsB,EAAW,UAC7CA,EAAW,SAAapB,KAAKpC,EAAaG,QAE1CyD,YACE,kBAAM5D,EAAaI,gBAAgByD,UACnB,IAAhBH,GAGF,QApBwB,+BAyB9B,SAASI,EAAWC,GACd/D,EAAaE,SAASgD,EAAgBa,EAAMjB,IAAIkB,eAGtD,SAASC,EAAaF,GAChB/D,EAAaE,SAASgD,EAAgBa,EAAMG,OAAOvD,WAGzD,SAASwD,IAAe,IAAD,gBACF3D,SAAS4C,iBAAiB,cADxB,IACrB,oCACSE,MAAMC,gBAAkB,WAFZ,+BAKvB,SAAS1C,IACPb,EAAaI,gBAAgBiC,SAAQ,SAAC+B,GAAD,OAAcA,EAAS7B,UAC5DvC,EAAaI,gBAAkB,G,IC7HlBiE,E,uKArCb,WACE7D,SAAS8D,iBAAiB,UAAWC,GACrC/D,SAAS8D,iBAAiB,QAASE,GACnChE,SAAS8D,iBAAiB,cAAeG,GACzCjE,SAAS8D,iBAAiB,YAAaE,K,kCAGzC,WACEhE,SAASkE,oBAAoB,UAAWH,GACxC/D,SAASkE,oBAAoB,QAASF,GACtChE,SAASkE,oBAAoB,cAAeD,GAC5CjE,SAASkE,oBAAoB,YAAaF,K,oBAG5C,WACE,OACE,qCACE,eAAC3E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,kBAEF,eAAC9E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,kBAEF,eAAC9E,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,eACA,cAAC7E,EAAA,EAAD,CAAK6E,UAAU,WAAf,yB,GA/BWC,a,eCNrB,SAASC,IACH7E,EAAaE,SACf0D,YACE,kBAAOpD,SAASC,eAAe,mBAAmBE,UAA3C,UACP,K,ICgFSmE,E,kDA/Eb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,kBAAoB,EAAKA,kBAAkB5D,KAAvB,gBACzB,EAAK6D,qBAAuB,EAAKA,qBAAqB7D,KAA1B,gBAC5B,EAAK8D,aAAe,EAAKA,aAAa9D,KAAlB,gBALH,E,qDAQnB,WACEd,KAAK0E,kBAAkBhF,EAAaE,SACpCF,EAAaO,UAAUC,SAASC,eAAe,gBAAgBC,OAC/DF,SACGC,eAAe,gBACf6D,iBAAiB,YAAaa,K,+BAGnC,SAAkBC,GAChB5E,SAASC,eAAe,gBAAgB4E,QAAUD,I,kCAGpD,WACEpF,EAAaK,WACbQ,IACAP,KAAK0E,kBAAkBhF,EAAaE,W,0BAGtC,WACEF,EAAaO,UAAUC,SAASC,eAAe,gBAAgBC,OAC3DV,EAAaE,UACfM,SAASC,eAAe,mBAAmBE,UAA3C,kBACEH,SAASC,eAAe,gBAAgBC,U,kCAK9C,WACEF,SACGC,eAAe,gBACfiE,oBAAoB,YAAaS,K,oBAGtC,WACE,OACE,qCACE,eAACtF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,qCACE,cAACwF,EAAA,EAAKC,OAAN,CACEZ,UAAU,gCACV5E,GAAG,eACHyF,SAAUlF,KAAK2E,uBAEjB,cAACK,EAAA,EAAKG,MAAN,CAAYC,QAAQ,eAApB,wBAGJ,cAAC5F,EAAA,EAAD,UACE,qCACE,cAACwF,EAAA,EAAKC,OAAN,CACEZ,UAAU,gCACV5E,GAAG,cACHyF,SAAUxF,EAAaY,aAEzB,cAAC0E,EAAA,EAAKG,MAAN,CAAYC,QAAQ,cAApB,0BAIN,cAAC7F,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,qCACE,cAACwF,EAAA,EAAKK,MAAN,CAAY5F,GAAG,eAAeyF,SAAUlF,KAAK4E,eAC7C,cAACI,EAAA,EAAKG,MAAN,CAAYC,QAAQ,eAApB,kC,GAvESd,a,YCsBRgB,MApBf,WACE,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAC/F,GAAG,kBAApB,SACE,eAAC8F,EAAA,EAAD,CAAW9F,GAAG,eAAd,UACE,cAACF,EAAA,EAAD,CAAKE,GAAG,YAAR,SACE,eAAC8F,EAAA,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QAHoB,aAMxB,cAAChG,EAAA,EAAD,CAAKE,GAAG,SAAR,SACE,cAAC8F,EAAA,EAAD,CAAW9F,GAAG,YAAd,SACE,cAAC,EAAD,OAFiB,gBCNdgG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlG,SAASC,eAAe,SAM1BsF,M","file":"static/js/main.f2696a57.chunk.js","sourcesContent":["import React from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\n\nconst Display = () => {\n  return (\n    <>\n      <Row>\n        <Col id=\"display\">\n          <h3>\n            <span id=\"display-content\">&nbsp;</span>\n          </h3>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Display;\n","import { stopAudio } from \"./keypadHandlers\";\n\nconst appVariables = {\n  bankNum: 0,\n  powerOn: true,\n  volume: null,\n  playingSwitcher: [],\n  setPower() {\n    this.powerOn = !this.powerOn;\n    if (!this.powerOn) {\n      document.getElementById(\"display-content\").innerHTML = `&nbsp`;\n      this.setVolume(0.0);\n    } else {\n      this.setVolume(document.getElementById(\"volume-range\").value);\n    }\n  },\n  setBankNum() {\n    this.bankNum = this.bankNum === 0 ? 1 : 0;\n    document.getElementById(\"display-content\").innerHTML =\n      this.bankNum === 0 ? \"Heater Kit\" : \"Piano Kit\";\n    stopAudio();\n  },\n  setVolume(newVolume) {\n    this.volume = (newVolume * 1.0) / 100;\n  },\n};\n\nconst objToStr = {}.toString;\n\nfor (let varName in appVariables) {\n  if (objToStr.call(appVariables[varName]).includes(\"Function\"))\n    appVariables[varName] = appVariables[varName].bind(appVariables);\n}\n\nexport default appVariables;\n","import appVariables from \"./variables\";\n\nconst audioMap = (function init() {\n  const map = new Map();\n\n  function Channel(audio_url, audio_volume) {\n    this.audio_url = audio_url;\n    this.resource = new Audio(audio_url);\n    this.resource.volume = audio_volume;\n  }\n\n  Channel.prototype.play = function () {\n    this.resource.play();\n  };\n\n  function Switcher(audio_url, audio_volume, num) {\n    this.channels = [];\n    this.num = num;\n    this.index = 0;\n\n    for (let i = 0; i < num; ++i)\n      this.channels.push(new Channel(audio_url, audio_volume));\n  }\n\n  Switcher.prototype.play = function (volume) {\n    this.channels.forEach((channel) => (channel.resource.volume = volume));\n    this.channels[this.index++].play();\n    this.index = this.index < this.num ? this.index : 0;\n  };\n\n  Switcher.prototype.stop = function () {\n    this.channels.forEach((channel) => {\n      channel.resource.pause();\n      channel.resource.currentTime = 0;\n    });\n  };\n\n  const audioLinksOne = [\n    {\n      name: \"Heater 1\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n    },\n    {\n      name: \"Heater 2\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n    },\n    {\n      name: \"Heater 3\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n    },\n    {\n      name: \"Heater 4\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n    },\n    {\n      name: \"Clap\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n    },\n    {\n      name: \"Open HH\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n    },\n    {\n      name: \"Kick n' Hat\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n    },\n    {\n      name: \"Kick\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n    },\n    {\n      name: \"Closed HH\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n    },\n  ];\n  const audioLinksTwo = [\n    {\n      name: \"Chord 1\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3\",\n    },\n    {\n      name: \"Chord 2\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3\",\n    },\n    {\n      name: \"Chord 3\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3\",\n    },\n    {\n      name: \"Shaker\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3\",\n    },\n    {\n      name: \"Open HH\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3\",\n    },\n    {\n      name: \"Closed HH\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3\",\n    },\n    {\n      name: \"Punchy Kick\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3\",\n    },\n    {\n      name: \"Side Stick\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3\",\n    },\n    {\n      name: \"Snare\",\n      link: \"https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3\",\n    },\n  ];\n  const keys = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\n  keys.forEach((key, id) => {\n    const audioObjects = [audioLinksOne[id], audioLinksTwo[id]];\n    audioObjects.forEach(\n      (audioObj) =>\n        (audioObj[\"switcher\"] = new Switcher(\n          audioObj[\"link\"],\n          appVariables.volume,\n          3\n        ))\n    );\n    map.set(key, audioObjects);\n  });\n\n  return map;\n})();\n\nfunction findAudioToPlay(key) {\n  const displayContent = document.getElementById(\"display-content\");\n\n  for (let keypad of document.querySelectorAll(\".drum-pad\")) {\n    if (keypad.innerHTML === key) {\n      keypad.style.backgroundColor = \"#123456\";\n\n      const audioObject = audioMap.get(key)[appVariables.bankNum];\n      const audioDuration =\n        audioObject[\"switcher\"].channels[0].resource.duration;\n\n      displayContent.innerHTML = audioObject[\"name\"];\n      appVariables.playingSwitcher.push(audioObject[\"switcher\"]);\n      audioObject[\"switcher\"].play(appVariables.volume);\n\n      setTimeout(\n        () => appVariables.playingSwitcher.shift(),\n        audioDuration * 10000\n      );\n\n      break;\n    }\n  }\n}\n\nfunction tapAndPlay(event) {\n  if (appVariables.powerOn) findAudioToPlay(event.key.toUpperCase());\n}\n\nfunction clickAndPlay(event) {\n  if (appVariables.powerOn) findAudioToPlay(event.target.innerHTML);\n}\n\nfunction keypadReset() {\n  for (let keypad of document.querySelectorAll(\".drum-pad\"))\n    keypad.style.backgroundColor = \"#495057\";\n}\n\nfunction stopAudio() {\n  appVariables.playingSwitcher.forEach((switcher) => switcher.stop());\n  appVariables.playingSwitcher = [];\n}\n\nexport {\n  tapAndPlay as keydownHandler,\n  keypadReset as pointerupHandler,\n  clickAndPlay as pointerdownHandler,\n  stopAudio,\n};\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"react-bootstrap\";\nimport {\n  keydownHandler,\n  pointerupHandler,\n  pointerdownHandler,\n} from \"../custom_scripts/keypadHandlers\";\n\nclass Keypad extends Component {\n  componentDidMount() {\n    document.addEventListener(\"keydown\", keydownHandler);\n    document.addEventListener(\"keyup\", pointerupHandler);\n    document.addEventListener(\"pointerdown\", pointerdownHandler);\n    document.addEventListener(\"pointerup\", pointerupHandler);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", keydownHandler);\n    document.removeEventListener(\"keyup\", pointerupHandler);\n    document.removeEventListener(\"pointerdown\", pointerdownHandler);\n    document.removeEventListener(\"pointerup\", pointerupHandler);\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col className=\"drum-pad\">Q</Col>\n          <Col className=\"drum-pad\">W</Col>\n          <Col className=\"drum-pad\">E</Col>\n        </Row>\n        <Row>\n          <Col className=\"drum-pad\">A</Col>\n          <Col className=\"drum-pad\">S</Col>\n          <Col className=\"drum-pad\">D</Col>\n        </Row>\n        <Row>\n          <Col className=\"drum-pad\">Z</Col>\n          <Col className=\"drum-pad\">X</Col>\n          <Col className=\"drum-pad\">C</Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default Keypad;\n","import appVariables from \"./variables\";\n\nfunction updateDisplayWhenVolumeChanges() {\n  if (appVariables.powerOn) {\n    setTimeout(\n      () => (document.getElementById(\"display-content\").innerHTML = `&nbsp`),\n      300\n    );\n  }\n}\n\nexport { updateDisplayWhenVolumeChanges as updateDisplay };\n","import { React, Component } from \"react\";\nimport { Row, Col, Form } from \"react-bootstrap\";\nimport appVariables from \"../custom_scripts/variables\";\nimport { stopAudio } from \"../custom_scripts/keypadHandlers\";\nimport { updateDisplay } from \"../custom_scripts/controlsHandlers\";\n\nclass Controls extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updatePowerSwitch = this.updatePowerSwitch.bind(this);\n    this.powerOnChangeHandler = this.powerOnChangeHandler.bind(this);\n    this.updateVolume = this.updateVolume.bind(this);\n  }\n\n  componentDidMount() {\n    this.updatePowerSwitch(appVariables.powerOn);\n    appVariables.setVolume(document.getElementById(\"volume-range\").value);\n    document\n      .getElementById(\"volume-range\")\n      .addEventListener(\"pointerup\", updateDisplay);\n  }\n\n  updatePowerSwitch(state) {\n    document.getElementById(\"power-switch\").checked = state;\n  }\n\n  powerOnChangeHandler() {\n    appVariables.setPower();\n    stopAudio();\n    this.updatePowerSwitch(appVariables.powerOn);\n  }\n\n  updateVolume() {\n    appVariables.setVolume(document.getElementById(\"volume-range\").value);\n    if (appVariables.powerOn) {\n      document.getElementById(\"display-content\").innerHTML = `Volume: ${\n        document.getElementById(\"volume-range\").value\n      }`;\n    }\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById(\"volume-range\")\n      .removeEventListener(\"pointerup\", updateDisplay);\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col>\n            <>\n              <Form.Switch\n                className=\"form-switch-sm form-switch-md\"\n                id=\"power-switch\"\n                onChange={this.powerOnChangeHandler}\n              />\n              <Form.Label htmlFor=\"power-switch\">Power</Form.Label>\n            </>\n          </Col>\n          <Col>\n            <>\n              <Form.Switch\n                className=\"form-switch-sm form-switch-md\"\n                id=\"bank-switch\"\n                onChange={appVariables.setBankNum}\n              />\n              <Form.Label htmlFor=\"bank-switch\">Bank</Form.Label>\n            </>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <>\n              <Form.Range id=\"volume-range\" onChange={this.updateVolume} />\n              <Form.Label htmlFor=\"volume-range\">Volume</Form.Label>\n            </>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default Controls;\n","import React from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport Display from \"./components/DisplayComponent\";\nimport Keypad from \"./components/KeypadComponent\";\nimport Controls from \"./components/ControlsComponent\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Container fluid id=\"outer-container\">\n      <Container id=\"drum-machine\">\n        <Row id=\"disp-ctrl\" key=\"disp-ctrl\">\n          <Container>\n            <Display />\n            <Controls />\n          </Container>\n        </Row>\n        <Row id=\"keypad\" key=\"keypad\">\n          <Container id=\"drum-pads\">\n            <Keypad />\n          </Container>\n        </Row>\n      </Container>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
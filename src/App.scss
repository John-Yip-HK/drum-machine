@import url("https://fonts.googleapis.com/css2?family=Titillium+Web:wght@400;700&display=swap");
@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";

@mixin setBlockMargin($up-down-margin, $left-right-margin) {
  margin: $up-down-margin $left-right-margin;
}

@mixin setDrumMachineWidth($breakpoint, $factor) {
  width: map-get($grid-breakpoints, $breakpoint) * $factor;
}

// Custom form switch with breakpoints.
// Credit: https://codepen.io/nisharg/pen/gOPLOYY?editors=0100
@mixin switch($res: "sm") {
  $index: 1rem;
  $mainVal: 1rem;

  @if $res == "md" {
    $index: 2rem;
    $mainVal: 1.5rem;
  } @else if $res == "lg" {
    $index: 3rem;
    $mainVal: 2rem;
  } @else if $res == "xl" {
    $index: 3rem;
    $mainVal: 3.5rem;
  }

  .form-check-input {
    height: $mainVal;
    width: calc(#{$index} + 0.75rem);
    border-radius: $mainVal * 2;
  }
}

html,
body {
  overflow: hidden;
}

body {
  background: $gray-800;
  color: $white;
  font-size: 20px;
}

#outer-container {
  font-family: "Titillium Web", sans-serif;
  height: 100vh;
  padding: 0;
  display: flex;
  align-items: center;

  #drum-machine {
    @include setBlockMargin(0, auto);

    max-width: 80%;
    border: 1px solid $yellow-300;
    border-radius: 5px;
    background: $orange-700;

    .col {
      text-align: center;
    }

    #disp-ctrl {
      @include setBlockMargin(0, 0.5rem);

      #display {
        @include setBlockMargin(1rem, auto);

        padding: 0.5rem 0;
        max-width: 70%;
        background: $black;

        h3 {
          @include setBlockMargin(0.3rem, 0);
        }
      }

      .form-switch.form-switch-sm {
        @include switch("md");
      }

      #volume-range {
        @include setBlockMargin(0, auto);
        display: block;
      }
    }

    #keypad {
      @include setBlockMargin(0, 0.5rem);
      margin-bottom: 1rem;

      .col.drum-pad {
        @include setBlockMargin(0.1rem, 0.1rem);

        text-align: center;

        cursor: pointer;

        background: $gray-700;
        color: $white;

        border: 0.5px solid $orange-200;
        border-radius: 0.1rem;

        padding: 1rem 0.5rem;
      }

      .col.drum-pad:active {
        background: $gray-600;
      }
    }
  }
}

@media only screen and (min-width: map-get($grid-breakpoints, "sm")) {
  #drum-machine {
    @include setDrumMachineWidth("sm", 0.6);
  }
}

@media only screen and (min-width: map-get($grid-breakpoints, "md")),
  only screen and (min-device-aspect-ratio: 1/1) and (orientation: landscape) {
  #drum-machine {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    align-items: center;

    #disp-ctrl {
      margin-right: 0 !important;
      grid-column: 2;
      grid-row: 1;

      #volume-range {
        width: 80%;
      }
    }

    #keypad {
      @include setBlockMargin(0, 0);
      margin-bottom: 0 !important;
      grid-column: 1;
      grid-row: 1;
    }
  }
}

@media only screen and (min-device-aspect-ratio: 1/1) and (orientation: landscape) {
  #drum-machine {
    width: 80%;
  }
}

@media only screen and (min-width: map-get($grid-breakpoints, "md")) {
  #outer-container {
    #drum-machine {
      @include setDrumMachineWidth("lg", 0.6);

      #disp-ctrl {
        .form-switch.form-switch-md {
          @include switch("lg");
        }
      }
    }
  }
}

@media only screen and (min-width: map-get($grid-breakpoints, "lg")) {
  #drum-machine {
    #disp-ctrl {
      #volume-range {
        width: 70%;
      }
    }
  }
}
